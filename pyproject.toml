[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.black]
line-length = 100

[tool.codespell]
ignore-words-list = "alog"

[tool.coverage.run]
branch = true
omit = ["*/starlite_saqlalchemy/scripts.py", "*/starlite_saqlalchemy/lifespan.py", "tests/*"]
relative_files = true
source_pkgs = ["starlite_saqlalchemy", "pytest_starlite_saqlalchemy"]

[tool.coverage.paths]
others = [".", "*/starlite_saqlalchemy", "*/pytest_starlite_saqlalchemy"]
source = ["src", "*/site-packages"]

[tool.coverage.report]
exclude_lines = [
  'if TYPE_CHECKING:',
  'pragma: no cover',
  'raise NotImplementedError',
]
show_missing = true
skip_covered = true

[tool.isort]
profile = "black"

[tool.poetry]
authors = ["Peter Schutt <peter.github@proton.me>"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Plugins",
  "Intended Audience :: Developers",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Topic :: Internet :: WWW/HTTP",
  "Topic :: Software Development",
  "Topic :: System :: Installation/Setup",
  "Framework :: Pytest",
]
description = "Starlite config plugin with SAQ and SQLAlchemy boilerplate"
keywords = ["api", "rest", "http", "asgi", "starlite", "saq", "sqlalchemy", "plugin", "python"]
license = "MIT"
name = "starlite-saqlalchemy"
packages = [
  {include = "starlite_saqlalchemy", from = "src"},
  {include = "pytest_starlite_saqlalchemy", from = "src"},
]
readme = "README.md"
repository = "https://github.com/topsport-com-au/starlite-saqlalchemy"
version = "0.29.0"

[tool.poetry.dependencies]
asyncpg = "*"
httpx = "*"
msgspec = "*"
pydantic = "*"
python = "^3.10"
python-dotenv = "*"
starlite = ">=1.40.1"
tenacity = "*"
uvicorn = "*"
uvloop = "*"

# Optionals
hiredis = {version = "*", optional = true}
redis = {version = "*", optional = true}
saq = {version = "^0.9.1", optional = true}
sentry-sdk = {version = "*", optional = true}
sqlalchemy = {version = ">=2.0.0", optional = true}

[tool.poetry.extras]
all = ["redis", "hiredis", "saq", "sentry-sdk", "sqlalchemy"]
cache = ["redis", "hiredis"]
sentry = ["sentry-sdk"]
sqlalchemy = ["sqlalchemy"]
worker = ["saq", "hiredis"]

[tool.poetry.plugins."pytest11"]
pytest_starlite_saqlalchemy = "pytest_starlite_saqlalchemy"

[tool.poetry.plugins."console_scripts"]
run-app = "starlite_saqlalchemy.scripts:run_app"

[tool.poetry.urls]
Bugs = "https://github.com/topsport-com-au/starlite-saqlalchemy/issues"
GitHub = "https://github.com/topsport-com-au"

[tool.pycln]
all = true

[tool.pydocstyle]
add-ignore = "D106,D205,D212,D415"
add-select = "D401,D404,D417"
convention = "google"

[tool.pytest.ini_options]
addopts = [
  "-ra",
  "--strict-config", # Plugin are enabled in tests/conftest.py to control loading order.
  "-p",
  "no:pytest_starlite_saqlalchemy",
  "-p",
  "no:pytest_dotenv",
]
asyncio_mode = "auto"
env_files = ["tests.env"]
testpaths = ["tests/unit"]

[tool.pylint.main]
disable = [
  "line-too-long",
  "no-self-argument",
  "too-few-public-methods",
  "too-many-arguments",
]
enable = "useless-suppression"
extension-pkg-whitelist = ["asyncpg", "msgspec", "pydantic"]

[tool.semantic_release]
branch = "main"
build_command = "pip install poetry && poetry build"
major_on_zero = false
upload_to_release = true
upload_to_repository = true
version_toml = "pyproject.toml:tool.poetry.version"
version_variable = "src/starlite_saqlalchemy/__init__.py:__version__"
